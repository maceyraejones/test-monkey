{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\csis\\\\Desktop\\\\testing\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\csis\\\\Desktop\\\\testing\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\csis\\\\Desktop\\\\testing\\\\react-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\csis\\\\Desktop\\\\testing\\\\react-frontend\\\\src\\\\components\\\\Cards.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport TinderCard from 'react-tinder-card';\nimport \"./Cards.css\";\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nvar Cards = function Cards() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([0]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      animals = _useState4[0],\n      SetAnimals = _useState4[1];\n\n  var navigate = useNavigate();\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$axios$get, response;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setLoading(true);\n                _context.prev = 1;\n                _context.next = 4;\n                return axios.get('/api/animal');\n\n              case 4:\n                _yield$axios$get = _context.sent;\n                response = _yield$axios$get.data;\n                // console.log(response);\n                SetAnimals(response);\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](1);\n                console.error(_context.t0.message);\n\n              case 12:\n                setLoading(false);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 9]]);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []); // useEffect(() => {\n  //   const fetchData = async () =>{\n  //     setLoading(true);\n  //     try {\n  //       const {data: response} = await axios.get('/api/animal');\n  //       SetAnimals(response);\n  //     } catch (error) {\n  //       console.error(error.message);\n  //     }\n  //     setLoading(false);\n  //   }\n  //   fetchData();\n  // }, []);\n\n  var swiped = function swiped(direction, nameTodelete) {\n    if (direction === \"right\") {\n      // need to navigate like using id\n      navigate(\"/AddCart\");\n    }\n\n    console.log(\"receiving\" + nameTodelete);\n  };\n\n  var outOffFrame = function outOffFrame(name) {\n    console.log(name + \"left the screen\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animalsCards\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"animalsCards__container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"run out of card\"), animals.map(function (animal) {\n    return /*#__PURE__*/React.createElement(TinderCard, {\n      className: \"swipe\",\n      key: animal.name,\n      preventSwipe: [\"up\", \"down\"],\n      onSwipe: function onSwipe(dir) {\n        return swiped(dir, animal.name);\n      },\n      onCardLeftScreen: function onCardLeftScreen() {\n        return outOffFrame(animal.name);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundImage: \"url(\".concat(animal.image, \")\")\n        /* Add backticks here */\n\n      },\n      className: \"card\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 3\n      }\n    }, animal.name)));\n  })));\n};\n\nexport default Cards;","map":{"version":3,"sources":["C:/Users/csis/Desktop/testing/react-frontend/src/components/Cards.jsx"],"names":["React","useState","useEffect","TinderCard","axios","useNavigate","Link","Cards","loading","setLoading","animals","SetAnimals","navigate","fetchData","get","response","data","console","error","message","swiped","direction","nameTodelete","log","outOffFrame","name","map","animal","dir","backgroundImage","image"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react';\r\nimport TinderCard from 'react-tinder-card';\r\nimport \"./Cards.css\";\r\nimport axios from 'axios';\r\nimport { useNavigate} from 'react-router-dom'\r\n\r\nimport {Link} from 'react-router-dom';\r\nconst Cards = () => {\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n    const [animals, SetAnimals] = useState([0])\r\n\r\n     const navigate = useNavigate();\r\n     useEffect(() => {\r\n      const fetchData = async () =>{\r\n        setLoading(true);\r\n        try {\r\n          const {data: response} = await axios.get('/api/animal');\r\n          // console.log(response);\r\n          SetAnimals(response);\r\n        } catch (error) {\r\n          console.error(error.message);\r\n        }\r\n        setLoading(false);\r\n      }\r\n     \r\n      fetchData();\r\n    }, []);\r\n    // useEffect(() => {\r\n    //   const fetchData = async () =>{\r\n    //     setLoading(true);\r\n    //     try {\r\n    //       const {data: response} = await axios.get('/api/animal');\r\n    //       SetAnimals(response);\r\n    //     } catch (error) {\r\n    //       console.error(error.message);\r\n    //     }\r\n    //     setLoading(false);\r\n    //   }\r\n  \r\n    //   fetchData();\r\n    // }, []);\r\n    \r\n\r\n    const swiped = (direction, nameTodelete) =>{\r\n\r\n      if (direction ===\"right\"){\r\n        // need to navigate like using id\r\n        navigate(\"/AddCart\")\r\n\r\n      }\r\n  console.log(\"receiving\" + nameTodelete)\r\n\r\n    }\r\n \r\n    const outOffFrame =(name) =>{\r\n\r\n        console.log(name + \"left the screen\")\r\n\r\n    }\r\n\r\n  \r\n  return (\r\n    <div className='animalsCards'>\r\n        <div className='animalsCards__container'>\r\n        <h1>run out of card</h1>\r\n  \r\n{animals.map((animal)=> \r\n\r\n\r\n<TinderCard\r\n\r\nclassName='swipe'\r\nkey={animal.name}\r\npreventSwipe={[\"up\", \"down\"]}\r\nonSwipe={(dir) => swiped(dir, animal.name)}\r\nonCardLeftScreen={()=>outOffFrame(animal.name) }\r\n>\r\n\r\n<div\r\n            style={{\r\n              backgroundImage: `url(${animal.image})` /* Add backticks here */,\r\n            }}\r\n            className=\"card\"\r\n          >\r\n  <h3 >{animal.name}</h3>\r\n\r\n          </div>\r\n       \r\n       \r\n\r\n</TinderCard> )}\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cards"]},"metadata":{},"sourceType":"module"}